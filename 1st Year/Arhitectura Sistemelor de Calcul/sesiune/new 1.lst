     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, scanf, printf
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10                                      max equ 50
    11 00000000 00<rept>                    s1 times max+1 db 0
    12 00000033 00<rept>                    s2 times max+1 db 0
    13 00000066 00<rept>                    d times 2*max+1 db 0
    14                                      len equ $-s1
    15                                          
    16 000000CB 256300                      form db "%c",0
    17 000000CE 257300                      format_r db "%s", 0
    18 000000D1 5369722066696E616C-         format_p db "Sir final: %s", 13, 10, 0
    18 000000DA 3A2025730D0A00     
    19 000000E1 44617469207072696D-         text_1 db "Dati primul sir: ", 0
    19 000000EA 756C207369723A2000 
    20 000000F3 4461746920616C2064-         text_2 db "Dati al doilea sir: ", 0
    20 000000FC 6F696C656120736972-
    20 00000105 3A2000             
    21                                  
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; ...
    25 00000000 68[E1000000]                    push dword text_1
    26 00000005 FF15[00000000]                  call [printf]
    27 0000000B 83C404                          add esp,4*1
    28                                          
    29 0000000E 68[00000000]                    push dword s1
    30 00000013 68[CE000000]                    push dword format_r
    31 00000018 FF15[00000000]                  call [scanf]
    32 0000001E 83C408                          add esp,4*2
    33                                          
    34 00000021 BE00000000                      mov esi,0
    35 00000026 B9CB000000                      mov ecx,len
    36                                          repeta:
    37 0000002B 8B86[00000000]                      mov eax,[s1+esi]
    38 00000031 FF30                                push dword [eax]
    39 00000033 68[CB000000]                        push dword form
    40 00000038 FF15[00000000]                      call [printf]
    41 0000003E E2EB                                loop repeta
    42                                          
    43                                          
    44                                          ; exit(0)
    45 00000040 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    46 00000042 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
