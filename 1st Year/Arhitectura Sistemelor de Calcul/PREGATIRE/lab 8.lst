     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,printf,scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import printf msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import scanf msvcrt.dll
    11                                  
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16                                          
    17 00000000 52657A756C74617475-             format db "Rezultatul adunarii este: %d",0
    17 00000009 6C206164756E617269-
    17 00000012 6920657374653A2025-
    17 0000001B 6400               
    18                                      
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 B814000000                      mov eax,20
    24 00000005 83C07B                          add eax,123
    25 00000008 83C007                          add eax,7
    26                                          
    27 0000000B 60                              PUSHAD
    28                                          
    29 0000000C 50                              push dword eax
    30 0000000D 68[00000000]                    push dword format
    31 00000012 FF15[00000000]                  call [printf]
    32 00000018 83C408                          add esp,4*2
    33                                          
    34 0000001B 61                              POPAD
    35                                          
    36                                          ; exit(0)
    37 0000001C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    38 0000001E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
