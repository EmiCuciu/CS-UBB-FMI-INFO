     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit,fopen,fclose,fprintf,fread,printf
     6                                  import exit msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fclose msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  import fread msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  
    13                                  segment data use32 class=data
    14 00000000 696E7075742E747874-             nume_fisier db "input.txt",0
    14 00000009 00                 
    15 0000000A 7200                            mod_acces db "r",0
    16 0000000C FFFFFFFF                        descriptor_fisier dd -1
    17                                          len equ 200
    18 00000010 00000000                        nr_caractere_citite dd 0
    19 00000014 <res 000000C8>                  buffer resb len
    20 000000DC 4E756D6172756C2064-             format db "Numarul de caractere citite este: %d",0
    20 000000E5 652063617261637465-
    20 000000EE 726520636974697465-
    20 000000F7 20657374653A202564-
    20 00000100 00                 
    21                                      
    22                                  
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26                                          ;fopen = (nume_fisier,mod_acces)
    27 00000000 68[0A000000]                    push dword mod_acces
    28 00000005 68[00000000]                    push dword nume_fisier
    29 0000000A FF15[00000000]                  call [fopen]
    30 00000010 83C408                          add esp,4*2
    31                                          
    32 00000013 A3[0C000000]                    mov [descriptor_fisier],eax
    33                                          
    34 00000018 83F800                          cmp eax,0
    35 0000001B 744B                            je final
    36                                          
    37                                          ;fread = (buffer,1,len,descriptor_fisier)
    38                                          repeta:
    39 0000001D FF35[0C000000]                      push dword [descriptor_fisier]
    40 00000023 68C8000000                          push dword len
    41 00000028 6A01                                push dword 1
    42 0000002A 68[14000000]                        push dword buffer
    43 0000002F FF15[00000000]                      call [fread]
    44 00000035 83C410                              add esp,4*4
    45                                              
    46 00000038 0105[10000000]                      add [nr_caractere_citite],eax
    47                                              
    48 0000003E 83F800                              cmp eax,0
    49 00000041 7402                                je cleanup
    50                                              
    51 00000043 EBD8                                jmp repeta
    52                                              
    53                                          cleanup:
    54                                              ;fclose = (descriptor_fisier)
    55 00000045 FF35[0C000000]                      push dword [descriptor_fisier]
    56 0000004B FF15[00000000]                      call [fclose]
    57 00000051 83C404                              add esp,4
    58                                              
    59 00000054 FF35[10000000]                  push dword [nr_caractere_citite]
    60 0000005A 68[DC000000]                    push dword format
    61 0000005F FF15[00000000]                  call [printf]
    62 00000065 83C408                          add esp,4*2
    63                                          
    64                                          final:
    65                                          ; exit(0)
    66 00000068 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    67 0000006A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
