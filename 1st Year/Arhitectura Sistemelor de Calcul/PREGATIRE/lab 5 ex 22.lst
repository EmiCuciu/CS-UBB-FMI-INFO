     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 010306020307                s1 db 1,3,6,2,3,7
    15 00000006 060308010205                s2 db 6,3,8,1,2,5
    16                                      len equ $-s1-s2; sau $-s2 este aceeasi treaba
    17 0000000C 00<rept>                    d times len db 0
    18                                      
    19                                  ; Se dau 2 siruri de octeti S1 si S2 de aceeasi lungime. Sa se construiasca sirul D astfel incat fiecare element din D sa reprezinte minumul dintre elementele de pe pozitiile corespunzatoare din S1 si S2.
    20                                  ; Exemplu:
    21                                  ; S1: 1, 3, 6, 2, 3, 7
    22                                  ; S2: 6, 3, 8, 1, 2, 5
    23                                  ; D: 1, 3, 6, 1, 2, 5
    24                                  
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28                                          ; ...
    29 00000000 B906000000                      mov ecx,len
    30 00000005 E326                            jecxz final
    31 00000007 BE00000000                      mov esi,0
    32                                          repeta:
    33 0000000C 8A86[00000000]                      mov al,[s1+esi]
    34 00000012 8A9E[06000000]                      mov bl,[s2+esi]
    35 00000018 38D8                                cmp al,bl
    36 0000001A 7E08                                jle al_mai_mic
    37                                              
    38 0000001C 889E[0C000000]                      mov [d+esi],bl
    39 00000022 EB06                                jmp next
    40                                              
    41                                          al_mai_mic:
    42 00000024 8886[0C000000]                      mov [d+esi],al
    43                                          
    44                                          next:
    45 0000002A 46                                  inc esi
    46 0000002B E2DF                                loop repeta
    47                                              
    48                                          final:
    49                                      
    50                                          ; exit(0)
    51 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    52 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
