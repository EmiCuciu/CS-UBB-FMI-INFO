     1                                  ;Problema. Se da un sir de valori numerice intregi reprezentate pe quadworduri.
     2                                  ;Sa se determine suma cifrelor numarului multiplilor de 8 din sirul octetilor 
     3                                  ;inferiori ai cuvintelor superioare ai dublucuvintelor superioare din elementele sirului de quadworduri.
     4                                  
     5                                  
     6                                  ;Solutie: Parcurgand sirul de quadworduri vom obtine intai numarul multiplilor de 8 din 
     7                                  ;sirul octetilor inferiori ai cuvintelor superioare ai dublucuvintelor superioare din elementele sirului. Apoi vom obtine 
     8                                  ;cifrele acestui numar prin impartiri succesive la 10 si vom calcula suma lor.
     9                                  
    10                                  bits 32 
    11                                  
    12                                  
    13                                  global start        
    14                                  
    15                                  
    16                                  extern exit               
    17                                  import exit msvcrt.dll    
    18                                                            
    19                                  
    20                                  segment data use32 class=data
    21                                      ; ...
    22 00000000 B0BC0A1110311200D2-             sir  dq  123110110abcb0h,1116adcb5a051ad2h,4120ca11d730cbb0h
    22 00000009 1A055ACBAD1611B0CB-
    22 00000012 30D711CA2041       
    23                                          len equ ($-sir)/8;lungimea sirului (in quadwords)
    24 00000018 08                              opt db 8;variabila folosita pentru testarea divizibilitatii cu 8
    25 00000019 0A000000                        zece dd 10;variabila folosita pentru determinarea cifrelor unui numar prin impartiri succesive la 10
    26 0000001D 00000000                        suma dd  0;variabila in care retinem suma cifrelor 
    27                                          
    28                                          
    29                                  segment code use32 class=code
    30                                      start:
    31                                          ; ...
    32 00000000 BE[00000000]                    mov esi,sir
    33 00000005 FC                              cld
    34 00000006 B903000000                      mov ecx,len
    35 0000000B BB00000000                      mov ebx,0
    36                                          repeta:
    37 00000010 AD                                  lodsd
    38 00000011 AD                                  lodsd
    39 00000012 C1E810                              shr eax,16
    40 00000015 B400                                mov ah,0
    41                                              
    42 00000017 F635[18000000]                      div byte[opt]
    43 0000001D 80FC00                              cmp ah,0
    44 00000020 7501                                jnz nonmultiplu
    45 00000022 43                                  inc ebx
    46                                              
    47                                              nonmultiplu:
    48 00000023 E2EB                                    loop repeta
    49                                          
    50 00000025 89D8                            mov eax,ebx
    51 00000027 BA00000000                      mov edx,0
    52                                          transf:
    53 0000002C F735[19000000]                      div dword[zece]
    54 00000032 0115[1D000000]                      add dword[suma],edx
    55 00000038 83F800                              cmp eax,0
    56 0000003B 7407                                jz final
    57                                              
    58 0000003D BA00000000                          mov edx,0
    59 00000042 EBE8                                jmp transf
    60                                          
    61                                          final:
    62                                          ; exit(0)
    63 00000044 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    64 00000046 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
