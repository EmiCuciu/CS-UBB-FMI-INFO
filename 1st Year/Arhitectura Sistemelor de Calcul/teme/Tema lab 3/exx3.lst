     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 08                          a db 8
    15 00000001 09                          b db 9
    16 00000002 0200                        c dw 2
    17 00000004 10000000                    e dd 16
    18 00000008 1300000000000000            x dq 19
    19                                      
    20                                      ;(a+b*c+2/c)/(2+a)+e+x; a,b-byte; c-word; e-doubleword; x-qword
    21                                      
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 A0[01000000]                    mov al,[b]
    27 00000005 6698                    		cbw
    28 00000007 668B15[02000000]        		mov dx,[c]
    29 0000000E 66F7E2                  		mul dx
    30 00000011 6689C3                  		mov bx,ax
    31 00000014 A0[00000000]            		mov al,[a]
    32 00000019 6698                    		cbw
    33 0000001B 6601D8                  		add ax,bx
    34                                  		
    35 0000001E 6689C3                  		mov bx,ax
    36                                  		
    37 00000021 B002                    		mov al,2
    38 00000023 6698                    		cbw
    39 00000025 98                      		cwde
    40 00000026 668B15[02000000]        		mov dx,[c]
    41 0000002D 66F7FA                  		idiv dx
    42                                  		
    43 00000030 6601C3                  		add bx,ax
    44                                  		
    45 00000033 A0[00000000]            		mov al,[a]
    46 00000038 0402                    		add al,2
    47 0000003A 6698                    		cbw
    48                                  		
    49 0000003C 6689C2                  		mov dx,ax
    50 0000003F 6689D8                  		mov ax,bx
    51 00000042 66F7FA                  		idiv dx
    52                                  		
    53 00000045 98                      		cwde
    54                                  		
    55 00000046 8B1D[04000000]          		mov ebx,[e]
    56 0000004C 01D8                    		add eax,ebx
    57 0000004E 89C3                    		mov ebx,eax
    58                                  		
    59 00000050 A1[08000000]            		mov eax,[x]
    60 00000055 8B15[0C000000]          		mov edx,[x+4]
    61                                  		
    62 0000005B 01C3                    		add ebx,eax
    63                                          ; exit(0)
    64 0000005D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    65 0000005F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
