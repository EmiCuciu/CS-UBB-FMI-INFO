     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 01                          a db 1
    15 00000001 01                          b db 1
    16 00000002 0100                        c dw 1
    17 00000004 01000000                    e dd 1
    18 00000008 0100000000000000            x dq 1
    19                                      
    20                                      ;(a+b*c+2/c)/(2+a)+e+x; a,b-byte; c-word; e-doubleword; x-qword
    21                                      
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 A0[01000000]                    mov al,[b]
    27 00000005 6698                            cbw
    28                                          
    29 00000007 66F725[02000000]                mul word [c]
    30 0000000E 6689C3                          mov bx,ax
    31                                          
    32 00000011 A0[00000000]                    mov al,[a]
    33 00000016 6698                            cbw
    34 00000018 6601D8                          add ax,bx
    35                                          
    36 0000001B 6689C3                          mov bx,ax
    37                                          
    38 0000001E B002                            mov al,2
    39 00000020 6698                            cbw
    40 00000022 66F735[02000000]                div word[c]
    41                                          
    42 00000029 6601C3                          add bx,ax
    43                                          
    44 0000002C A0[00000000]                    mov al,[a]
    45 00000031 6698                            cbw
    46 00000033 6683C002                        add ax,2
    47 00000037 6689C2                          mov dx,ax
    48 0000003A 6689D8                          mov ax,bx
    49 0000003D 66F7FA                          idiv dx 
    50                                          
    51 00000040 98                              cwde
    52                                          
    53 00000041 8B1D[04000000]                  mov ebx,[e]
    54 00000047 01D8                            add eax,ebx
    55                                          
    56 00000049 8B0D[0C000000]                  mov ecx,[x+4]
    57 0000004F 8B1D[08000000]                  mov ebx,[x]
    58                                          
    59 00000055 01D8                            add eax,ebx
    60                                          ; exit(0)
    61 00000057 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    62 00000059 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
