     1                                  bits 32 ; Asamblarea pentru arhitectura pe 32 de bi»õi
     2                                  
     3                                  ; Declaram EntryPoint (o eticheta care defineste prima instructiune a programului)
     4                                  global start
     5                                  
     6                                  ; Declaram functiile externe necesare programului nostru
     7                                  extern exit
     8                                  import exit msvcrt.dll
     9                                  
    10                                  ; Segmentul pentru date (variabilele necesare programului)
    11                                  section .data
    12 00000000 08                          a db 8
    13 00000001 09                          b db 9
    14 00000002 0200                        c dw 2
    15 00000004 10000000                    e dd 16
    16 00000008 1300000000000000            x dq 19
    17                                  
    18                                  ; Segmentul pentru cod
    19                                  section .text
    20                                  start:
    21                                      ; Calculeaza a + b * c + 2 / c / (2 + a) + e + x
    22                                  
    23                                      ; Incarcam valorile din memoria de date
    24 00000000 A0[01000000]                mov al, [b]
    25 00000005 6698                        cbw
    26 00000007 668B15[02000000]            mov dx, [c]
    27 0000000E 66F7EA                      imul dx
    28 00000011 6689C3                      mov bx, ax
    29 00000014 A0[00000000]                mov al, [a]
    30 00000019 6698                        cbw
    31 0000001B 6601D8                      add ax, bx
    32                                  
    33 0000001E 6689C3                      mov bx, ax
    34                                  
    35 00000021 B002                        mov al, 2
    36 00000023 6698                        cbw
    37 00000025 98                          cwde
    38 00000026 668B15[02000000]            mov dx, [c]
    39                                  
    40                                      ; Verificam daca c este zero inainte de a efectua impartirea
    41 0000002D 6683FA00                    cmp dx, 0
    42 00000031 7431                        je divide_by_zero_error
    43                                  
    44 00000033 66F7FA                      idiv dx
    45                                  
    46 00000036 6601C3                      add bx, ax
    47                                  
    48 00000039 A0[00000000]                mov al, [a]
    49 0000003E 0402                        add al, 2
    50 00000040 6698                        cbw
    51                                  
    52 00000042 6689C2                      mov dx, ax
    53 00000045 6689D8                      mov ax, bx
    54 00000048 66F7FA                      idiv dx
    55                                  
    56 0000004B 98                          cwde
    57                                  
    58                                      ; Adunam e la rezultat
    59 0000004C 8B1D[04000000]              mov ebx, [e]
    60 00000052 01D8                        add eax, ebx
    61                                  
    62                                      ; Adunam x la rezultat
    63 00000054 8B1D[08000000]              mov ebx, [x]
    64 0000005A 01D8                        add eax, ebx
    65                                  
    66                                      ; Apelam functia "exit" pentru a termina programul
    67 0000005C 6A00                        push dword 0
    68 0000005E FF15[00000000]              call [exit]
    69                                  
    70                                  divide_by_zero_error:
    71                                      ; Tratam eroarea de impartire la zero aici
    72                                      ; Poti alege sa afisezi un mesaj de eroare si sa iesi din program cu un cod de eroare specific
    73                                      ; sau sa iei orice alte masuri necesare in cazul unei astfel de erori
    74                                      ; In acest exemplu, programul se va termina cu codul de eroare 1
    75 00000064 6A01                        push dword 1
    76 00000066 FF15[00000000]              call [exit]
