     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 07                          a db 7
    15 00000001 0600                        b dw 6
    16 00000003 08000000                    c dd 8
    17 00000007 1400000000000000            d dq 20
    18                                      ;a - byte, b - word, c - double word, d - qword - Interpretare fara semn
    19                                      
    20                                      ;  (d+d)-a-b-c
    21                                       
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 8B15[0B000000]              mov edx,[d+4]
    27 00000006 A1[07000000]                mov eax,[d]
    28 0000000B 01C0                        add eax,eax
    29 0000000D 11D2                        adc edx,edx
    30                                      
    31 0000000F 0FB61D[00000000]            movzx ebx,byte [a]
    32                                      
    33 00000016 29D8                        sub eax,ebx
    34 00000018 83DA00                      sbb edx,0
    35                                      
    36 0000001B 0FB71D[01000000]            movzx ebx,word[b]
    37                                      
    38 00000022 29D8                        sub eax,ebx
    39                                      
    40 00000024 89C3                        mov ebx,eax 
    41                                      
    42 00000026 A1[03000000]                mov eax,dword[c]
    43                                      
    44 0000002B 29C3                        sub ebx,eax
    45                                      
    46                                          ; exit(0)
    47 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
