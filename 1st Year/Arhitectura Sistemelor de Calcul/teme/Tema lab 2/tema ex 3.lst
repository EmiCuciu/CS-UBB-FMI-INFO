     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 2200                            a dw 34
    15 00000002 0800                            b dw 8
    16 00000004 0900                            c dw 9
    17 00000006 0A00                            d dw 10 
    18                                             
    19                                  ;(a-b-c)+(a-c-d-d)
    20                                     
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; ...
    25 00000000 A1[00000000]                MOV EAX,[a] ;EAX=34
    26 00000005 2B05[02000000]              SUB EAX,[b] ;EAX=34-8=26
    27 0000000B 2B05[04000000]              SUB EAX,[c] ;EAX=26-9=17
    28 00000011 8B1D[00000000]              MOV EBX,[a] ;EBX=34
    29 00000017 2B1D[04000000]              SUB EBX,[c] ;EBX=34-9=25
    30 0000001D 2B1D[06000000]              SUB EBX,[d] ;EBX=25-10=15
    31 00000023 2B1D[06000000]              SUB EBX,[d] ;EBX=15-10-5
    32 00000029 01D8                        ADD EAX,EBX ;EAX=17+5=22
    33                                      
    34                                          ; exit(0)
    35 0000002B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 0000002D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
