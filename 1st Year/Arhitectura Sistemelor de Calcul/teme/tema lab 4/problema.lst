     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 5BCA                    	a dw 1100101001011011b ;1100 1010 0101 1011
    15 00000002 00000000                	b dd 00000000000000000000000000000000b
    16                                  
    17                                  	
    18                                  	
    19                                  	
    20                                  ;	Se da un cuvant A. Sa se obtina dublucuvantul B astfel:
    21                                  ;	bitii 0-3 ai lui B sunt 0;
    22                                  ;	bitii 4-7 ai lui B sunt bitii 8-11 ai lui A
    23                                  ;	bitii 8-9 si 10-11 ai lui B sunt bitii 0-1 inversati ca valoare ai lui A (deci de 2 ori) ;
    24                                  ;	bitii 12-15 ai lui B sunt biti de 1
    25                                  ;	bitii 16-31 ai lui B sunt identici cu bitii 0-15 ai lui B.
    26                                  	
    27                                  	
    28                                  	
    29                                  	
    30                                  	; our code starts here
    31                                  segment code use32 class=code
    32                                      start:
    33                                          ; ...
    34 00000000 B300                    		mov bl,00000000b
    35                                  		
    36 00000002 66A1[00000000]          		mov ax,[a] ;ax=1100 1010 0101 1011
    37                                  		
    38 00000008 66C1C808                		ror ax,8  ;ax=1011 0101 1100 1010
    39                                  		
    40 0000000C 88C7                    		mov bh,al ;bx=1100 1010 0000 0000
    41                                  		
    42 0000000E 66C1CB04                		ror bx,4  ;bx=0000 1100 1010 0000
    43                                  		
    44                                  		;biti 0-1 ai lui a sunt 11
    45                                  		
    46 00000012 66A1[00000000]          		mov ax,[a]
    47                                  		
    48 00000018 F6D0                    		not al ; al=1010 0100
    49                                  		
    50 0000001A 88C1                    		mov cl,al
    51                                  		
    52 0000001C B500                    		mov ch,00000000b ; cx=0000 0000 1010 0100
    53                                  		
    54 0000001E 66C1C106                		rol cx,6 ;cx=0010 1001 0000 0000
    55                                  		
    56 00000022 F6D0                    		not al ;al=0101 1011
    57                                  		
    58 00000024 88C5                    		mov ch,al; cx=0101 1011 0000 0000
    59                                  		
    60 00000026 66C1C102                		rol cx,2; cx=0110 1100 0000 0001
    61                                  		
    62 0000002A 88EF                    		mov bh,ch ; bx=0110 1100 1010 0000
    63                                  		
    64 0000002C B500                    		mov ch,00000000b
    65                                  		
    66 0000002E 88F9                    		mov cl,bh ;cx=0000 0000 0110 1100
    67                                  		
    68 00000030 66C1C104                		rol cx,4 ; cx=0000 0110 1100 0000
    69                                  		
    70 00000034 B5FF                    		mov ch,11111111b; cx=1111 1111 1100 0000
    71                                  		
    72 00000036 66C1C104                		rol cx,4; cx=1111 1100 0000 1111
    73                                  		
    74 0000003A 88EF                    		mov bh,ch; bx=1111 1100 1010 0000
    75                                  		
    76                                  		;bx=1111 1100 1010 0000
    77                                  		
    78 0000003C 66BA0000                		mov dx,0000000000000000b
    79 00000040 6689D8                  		mov ax,bx
    80 00000043 6650                    		push ax
    81 00000045 6652                    		push dx
    82 00000047 58                      		pop eax; eax=0000 0000 0000 0000 1111 1100 1010 0000
    83                                  		
    84 00000048 C1C010                  		rol eax,16; eax=1111 1100 1010 0000 0000 0000 0000 0000
    85                                  		
    86 0000004B 6689D8                  		mov ax,bx; eax=1111 1100 1010 0000 1111 1100 1010 0000
    87                                  		
    88 0000004E A3[02000000]            		mov [b],eax
    89                                          ; exit(0)
    90 00000053 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    91 00000055 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
